name: Build release package
on: push
jobs:
  package:
    runs-on: ubuntu-latest
    env:
      # Match versions packaged in Ubuntu (if available)
      LIBDE265_VERSION: 1.0.8
      LIBHEIF_VERSION: 1.12.0
      LIBAVIF_VERSION: 0.9.3
      CHARLS_VERSION: 2.3.4
      LIBJXL_VERSION: 0.7.0
      LIBNSBMP_BUILDSYSTEM_VERSION: 1.10
      LIBNSBMP_VERSION: 0.1.7
    steps:
      - uses: actions/checkout@v4
      - name: Install tools and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends build-essential help2man cmake wget
          sudo apt-get install -y --no-install-recommends nettle-dev libargon2-dev libpng-dev libcharls-dev libavif-dev libheif-dev libtiff-dev libwebp-dev libopenjp2-7-dev libzstd-dev liblzma-dev libbrotli-dev libbz2-dev zlib1g-dev libgtk-3-dev
          sudo apt-get install -y --no-install-recommends libde265-dev libx265-dev libnuma-dev libaom-dev
      # Ubuntu does not offer static libraries for these
      - name: Build static libde265
        run: |
          sudo mkdir /libde265_build
          sudo chown $(whoami) /libde265_build
          cd /libde265_build
          wget https://github.com/strukturag/libde265/archive/refs/tags/v${{env.LIBDE265_VERSION}}.tar.gz
          tar -xf v${{env.LIBDE265_VERSION}}.tar.gz
          cd libde265-${{env.LIBDE265_VERSION}}
          cmake -DBUILD_SHARED_LIBS=OFF .
          make
      - name: Build static libheif
        run: |
          sudo mkdir /libheif_build
          sudo chown $(whoami) /libheif_build
          cd /libheif_build
          wget https://github.com/strukturag/libheif/archive/refs/tags/v${{env.LIBHEIF_VERSION}}.tar.gz
          tar -xf v${{env.LIBHEIF_VERSION}}.tar.gz
          cd libheif-${{env.LIBHEIF_VERSION}}
          cmake -DBUILD_SHARED_LIBS=OFF -DWITH_AOM=OFF -DWITH_DAV1D=OFF -DWITH_LIBDE265=ON -DWITH_RAV1E=OFF -DWITH_X265=ON .
          make
      - name: Build static libavif
        run: |
          sudo mkdir /libavif_build
          sudo chown $(whoami) /libavif_build
          cd /libavif_build
          wget https://github.com/AOMediaCodec/libavif/archive/refs/tags/v${{env.LIBAVIF_VERSION}}.tar.gz
          tar -xf v${{env.LIBAVIF_VERSION}}.tar.gz
          cd libavif-${{env.LIBAVIF_VERSION}}
          cmake -DBUILD_SHARED_LIBS=OFF -DAVIF_CODEC_AOM=ON -DAVIF_CODEC_DAV1D=OFF -DAVIF_CODEC_LIBGAV1=OFF -DAVIF_CODEC_RAV1E=OFF -DAVIF_CODEC_SVT=OFF .
          make
      - name: Build static charls
        run: |
          sudo mkdir /charls_build
          sudo chown $(whoami) /charls_build
          cd /charls_build
          wget https://github.com/team-charls/charls/archive/refs/tags/${{env.CHARLS_VERSION}}.tar.gz
          tar -xf ${{env.CHARLS_VERSION}}.tar.gz
          cd charls-${{env.CHARLS_VERSION}}
          cmake -DBUILD_SHARED_LIBS=OFF -DCHARLS_BUILD_SAMPLES=OFF -DCHARLS_BUILD_TESTS=OFF .
          make
      # Not avilable in ubuntu-latest
      - name: Build libnsbmp
        run: |
          sudo mkdir /libnsbmp_build
          sudo chown $(whoami) /libnsbmp_build
          cd /libnsbmp_build
          wget https://download.netsurf-browser.org/libs/releases/buildsystem-${{env.LIBNSBMP_BUILDSYSTEM_VERSION}}.tar.gz
          tar -xf buildsystem-${{env.LIBNSBMP_BUILDSYSTEM_VERSION}}.tar.gz
          cd buildsystem-${{env.LIBNSBMP_BUILDSYSTEM_VERSION}}
          sudo make install PREFIX=/usr
          cd ..
          wget https://download.netsurf-browser.org/libs/releases/libnsbmp-${{env.LIBNSBMP_VERSION}}-src.tar.gz
          tar -xf libnsbmp-${{env.LIBNSBMP_VERSION}}-src.tar.gz
          cd libnsbmp-${{env.LIBNSBMP_VERSION}}
          make PREFIX=/usr COMPONENT_TYPE=lib-static
          sudo make install PREFIX=/usr COMPONENT_TYPE=lib-static
          sudo mv /usr/libnsbmp.h /usr/include
      - name: Build libjxl
        run: |
          sudo mkdir /libjxl_build
          sudo chown $(whoami) /libjxl_build
          cd /libjxl_build
          wget https://github.com/libjxl/libjxl/archive/refs/tags/v${{env.LIBJXL_VERSION}}.tar.gz
          tar -xf v${{env.LIBJXL_VERSION}}.tar.gz
          cd libjxl-${{env.LIBJXL_VERSION}}
          ./deps.sh
          cmake -DCMAKE_INSTALL_PREFIX=/usr -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF -DJPEGXL_FORCE_SYSTEM_BROTLI=ON -DJPEGXL_FORCE_SYSTEM_HWY=OFF -DJPEGXL_ENABLE_SKCMS=ON -DJPEGXL_BUNDLE_SKCMS=ON -DJPEGXL_ENABLE_TCMALLOC=OFF -DJPEGXL_ENABLE_TOOLS=OFF -DJPEGXL_ENABLE_SJPEG=OFF .
          make
          sudo make install
      - name: Configure for static linking
        # libpng is not linked into the GUI as GTK+ will likely pull in its own version, causing a crash
        run: |
          sed -i "s|\$(shell \$(PKG_CONFIG) --libs nettle)|/usr/lib/x86_64-linux-gnu/libnettle.a|g" config_system.mak
          sed -i "s|\$(shell \$(PKG_CONFIG) --libs libargon2)|/usr/lib/x86_64-linux-gnu/libargon2.a|g" config_system.mak
          sed -i "s|\$(shell \$(PKG_CONFIG) --libs libtiff-4)|/usr/lib/x86_64-linux-gnu/libtiff.a /usr/lib/x86_64-linux-gnu/libdeflate.a /usr/lib/x86_64-linux-gnu/libjbig.a /usr/lib/x86_64-linux-gnu/libjpeg.a /usr/lib/x86_64-linux-gnu/liblzma.a /usr/lib/x86_64-linux-gnu/libz.a -lm|g" config_system.mak
          sed -i "s|\$(shell \$(PKG_CONFIG) --libs libwebp)|/usr/lib/x86_64-linux-gnu/libwebp.a|g" config_system.mak
          sed -i "s|\$(shell \$(PKG_CONFIG) --libs libopenjp2)|/usr/lib/x86_64-linux-gnu/libopenjp2.a|g" config_system.mak
          sed -i "s|\$(shell \$(PKG_CONFIG) --libs libzstd)|/usr/lib/x86_64-linux-gnu/libzstd.a|g" config_system.mak
          sed -i "s|\$(shell \$(PKG_CONFIG) --libs liblzma)|/usr/lib/x86_64-linux-gnu/liblzma.a|g" config_system.mak
          sed -i "s|\$(shell \$(PKG_CONFIG) --libs libbrotlidec) \$(shell \$(PKG_CONFIG) --libs libbrotlienc)|/usr/lib/x86_64-linux-gnu/libbrotlidec.a /usr/lib/x86_64-linux-gnu/libbrotlienc.a /usr/lib/x86_64-linux-gnu/libbrotlicommon.a|g" config_system.mak
          sed -i "s|-lbz2|/usr/lib/x86_64-linux-gnu/libbz2.a|g" config_system.mak
          sed -i "s|\$(shell \$(PKG_CONFIG) --libs zlib)|/usr/lib/x86_64-linux-gnu/libz.a|g" config_system.mak
          sed -i "s|\$(shell \$(PKG_CONFIG) --libs libheif)|/libheif_build/libheif-${{env.LIBHEIF_VERSION}}/libheif/libheif.a /libde265_build/libde265-${{env.LIBDE265_VERSION}}/libde265/liblibde265.a /usr/lib/x86_64-linux-gnu/libx265.a /usr/lib/x86_64-linux-gnu/libnuma.a -lstdc++|g" config_system.mak
          sed -i "s|\$(shell \$(PKG_CONFIG) --libs libavif)|/libavif_build/libavif-${{env.LIBAVIF_VERSION}}/libavif.a /usr/lib/x86_64-linux-gnu/libaom.a|g" config_system.mak
          sed -i "s|-lcharls|/charls_build/charls-${{env.CHARLS_VERSION}}/libcharls.a|g" config_system.mak
          sed -i "s|\$(shell \$(PKG_CONFIG) --libs libjxl)|/libjxl_build/libjxl-${{env.LIBJXL_VERSION}}/lib/libjxl.a /libjxl_build/libjxl-${{env.LIBJXL_VERSION}}/third_party/highway/libhwy.a -lstdc++ -lm|g" config_system.mak
      - name: Build GUI
        run: |
          cd ${{github.workspace}}
          make
          rm impack
          strip impack-gtk
      - name: Configure for static linking (CLI)
        run: |
          sed -i "s|\$(shell \$(PKG_CONFIG) --libs libpng)|/usr/lib/x86_64-linux-gnu/libpng.a /usr/lib/x86_64-linux-gnu/libz.a|g" config_system.mak
      - name: Build CLI
        run: |
          cd ${{github.workspace}}
          make WITH_GTK=0
          strip impack
      - name: Create package
        run: |
          cd ${{github.workspace}}
          mkdir ImPack2-${{github.ref_name}}
          cp impack impack-gtk ImPack2-${{github.ref_name}}
          cp README.md CHANGELOG COPYING .github/COPYING.3rdparty ImPack2-${{github.ref_name}}
          mkdir ImPack2-${{github.ref_name}}/license
          cd ImPack2-${{github.ref_name}}/license
          cp /usr/share/doc/libargon2-dev/copyright argon2
          cp /usr/share/doc/libbrotli-dev/copyright brotli
          cp /usr/share/doc/libbz2-1.0/copyright bzip2
          cp /usr/share/doc/libcharls-dev/copyright charls
          cp /libjxl_build/libjxl-${{env.LIBJXL_VERSION}}/LICENSE.highway highway
          cp /usr/share/doc/libjbig-dev/copyright jbig-kit
          cp /usr/share/doc/libaom-dev/copyright libaom
          cp /usr/share/doc/libavif-dev/copyright libavif
          cp /usr/share/doc/libde265-dev/copyright libde265
          cp /usr/share/doc/libdeflate-dev/copyright libdeflate
          cp /usr/share/doc/libheif-dev/copyright libheif
          cp /usr/share/doc/libjpeg-turbo8-dev/copyright libjpeg-turbo
          cp /libjxl_build/libjxl-${{env.LIBJXL_VERSION}}/LICENSE libjxl
          cp /libnsbmp_build/libnsbmp-${{env.LIBNSBMP_VERSION}}/COPYING libnsbmp
          cp /usr/share/doc/libpng-dev/copyright libpng
          cp /usr/share/doc/libtiff-dev/copyright libtiff
          cp /usr/share/doc/libwebp-dev/copyright libwebp
          cp /usr/share/doc/nettle-dev/copyright nettle
          cp /usr/share/doc/libnuma-dev/copyright numactl
          cp /usr/share/doc/libopenjp2-7-dev/copyright openjpeg
          cp /libjxl_build/libjxl-${{env.LIBJXL_VERSION}}/LICENSE.skcms skcms
          cp /usr/share/doc/libx265-dev/copyright x265
          cp /usr/share/doc/liblzma-dev/copyright xz-utils
          cp /usr/share/doc/zlib1g-dev/copyright zlib
          cp /usr/share/doc/libzstd-dev/copyright zstd
          cd ${{github.workspace}}
          tar -c ImPack2-${{github.ref_name}} | xz -9 > ImPack2-${{github.ref_name}}-linux-x86_64.tar.xz
      - uses: actions/upload-artifact@v4
        with:
          name: ImPack2-${{github.ref_name}}-linux-x86_64.tar.xz
          path: ${{github.workspace}}/ImPack2-${{github.ref_name}}-linux-x86_64.tar.xz
